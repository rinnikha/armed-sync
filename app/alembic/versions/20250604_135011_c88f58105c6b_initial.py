"""initial

Revision ID: c88f58105c6b
Revises: 
Create Date: 2025-06-04 13:50:11.569589

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c88f58105c6b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('order_sync_config',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False, comment='Order Sync Config Name'),
    sa.Column('ms1_cp_id', sa.String(), nullable=True, comment='MS1 counterparty meta data'),
    sa.Column('ms2_organization_id', sa.String(), nullable=True, comment='MS2 organization meta data'),
    sa.Column('ms2_group_id', sa.String(), nullable=True, comment='MS2 group meta data'),
    sa.Column('ms2_store_id', sa.String(), nullable=True, comment='MS2 store meta data'),
    sa.Column('start_sync_datetime', sa.DateTime(), nullable=False, comment='Start synchronizing orders from this datetime'),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_permission_id'), 'permission', ['id'], unique=False)
    op.create_index(op.f('ix_permission_name'), 'permission', ['name'], unique=True)
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_role_id'), 'role', ['id'], unique=False)
    op.create_index(op.f('ix_role_name'), 'role', ['name'], unique=True)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_full_name'), 'user', ['full_name'], unique=False)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('rolepermission',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id'),
    sa.UniqueConstraint('role_id', 'permission_id', name='_role_permission_uc')
    )
    op.create_table('sync_orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ms1_order_id', sa.String(), nullable=False),
    sa.Column('ms2_purchase_id', sa.String(), nullable=True),
    sa.Column('ms1_state_href', sa.String(), nullable=False),
    sa.Column('sync_status', sa.Enum('SYNCED', 'PENDING', 'WAITING_FOR_CONFIRM', 'MODIFIED', 'FAILED', name='ordersyncstatus'), nullable=False),
    sa.Column('order_amount', sa.Double(), nullable=False),
    sa.Column('modification_status', sa.Enum('WAITING_FOR_APPROVE', 'APPROVED', 'RESYNCED', name='ordermodificationstatus'), nullable=True),
    sa.Column('info_msg', sa.String(), nullable=True),
    sa.Column('error_msg', sa.String(), nullable=True),
    sa.Column('moment', sa.DateTime(), nullable=False),
    sa.Column('config_id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['config_id'], ['order_sync_config.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userrole',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id'),
    sa.UniqueConstraint('user_id', 'role_id', name='_user_role_uc')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('userrole')
    op.drop_table('sync_orders')
    op.drop_table('rolepermission')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_full_name'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_role_name'), table_name='role')
    op.drop_index(op.f('ix_role_id'), table_name='role')
    op.drop_table('role')
    op.drop_index(op.f('ix_permission_name'), table_name='permission')
    op.drop_index(op.f('ix_permission_id'), table_name='permission')
    op.drop_table('permission')
    op.drop_table('order_sync_config')
    # ### end Alembic commands ###
