"""initial

Revision ID: 00efbdf755de
Revises: 
Create Date: 2025-05-07 02:07:05.002409

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '00efbdf755de'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ordermapping',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ms1_order_id', sa.String(), nullable=False),
    sa.Column('ms2_purchase_id', sa.String(), nullable=False),
    sa.Column('ms1_status', sa.String(), nullable=True),
    sa.Column('ms2_status', sa.String(), nullable=True),
    sa.Column('last_synced_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ordermapping_id'), 'ordermapping', ['id'], unique=False)
    op.create_index(op.f('ix_ordermapping_ms1_order_id'), 'ordermapping', ['ms1_order_id'], unique=True)
    op.create_index(op.f('ix_ordermapping_ms2_purchase_id'), 'ordermapping', ['ms2_purchase_id'], unique=True)
    op.create_table('ordersyncconfig',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False, comment='Order Sync Config Name'),
    sa.Column('ms1_cp_meta', sa.Text(), nullable=True, comment='MS1 counterparty meta data'),
    sa.Column('ms2_organization_meta', sa.Text(), nullable=True, comment='MS2 organization meta data'),
    sa.Column('ms2_group_meta', sa.Text(), nullable=True, comment='MS2 group meta data'),
    sa.Column('ms2_store_meta', sa.Text(), nullable=True, comment='MS2 store meta data'),
    sa.Column('start_sync_datetime', sa.DateTime(), nullable=False, comment='Start synchronizing orders from this datetime'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_permission_id'), 'permission', ['id'], unique=False)
    op.create_index(op.f('ix_permission_name'), 'permission', ['name'], unique=True)
    op.create_table('productmapping',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ms1_id', sa.String(), nullable=False),
    sa.Column('ms2_id', sa.String(), nullable=False),
    sa.Column('ms1_name', sa.String(), nullable=True),
    sa.Column('ms2_name', sa.String(), nullable=True),
    sa.Column('ms1_external_code', sa.String(), nullable=True),
    sa.Column('ms2_external_code', sa.String(), nullable=True),
    sa.Column('last_synced_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_productmapping_id'), 'productmapping', ['id'], unique=False)
    op.create_index(op.f('ix_productmapping_ms1_id'), 'productmapping', ['ms1_id'], unique=True)
    op.create_index(op.f('ix_productmapping_ms2_id'), 'productmapping', ['ms2_id'], unique=True)
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_role_id'), 'role', ['id'], unique=False)
    op.create_index(op.f('ix_role_name'), 'role', ['name'], unique=True)
    op.create_table('synclog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('summary', sa.JSON(), nullable=True),
    sa.Column('errors', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_synclog_id'), 'synclog', ['id'], unique=False)
    op.create_index(op.f('ix_synclog_status'), 'synclog', ['status'], unique=False)
    op.create_index(op.f('ix_synclog_type'), 'synclog', ['type'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_full_name'), 'user', ['full_name'], unique=False)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('pricelist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('min_quantity', sa.Integer(), nullable=True),
    sa.Column('template_id', sa.Integer(), nullable=True),
    sa.Column('additional_settings', sa.JSON(), nullable=True),
    sa.Column('pdf_path', sa.String(), nullable=True),
    sa.Column('last_generated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pricelist_id'), 'pricelist', ['id'], unique=False)
    op.create_index(op.f('ix_pricelist_name'), 'pricelist', ['name'], unique=False)
    op.create_table('report',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_type', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_report_id'), 'report', ['id'], unique=False)
    op.create_index(op.f('ix_report_report_type'), 'report', ['report_type'], unique=False)
    op.create_index(op.f('ix_report_status'), 'report', ['status'], unique=False)
    op.create_table('rolepermission',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id'),
    sa.UniqueConstraint('role_id', 'permission_id', name='_role_permission_uc')
    )
    op.create_table('userrole',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id'),
    sa.UniqueConstraint('user_id', 'role_id', name='_user_role_uc')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('userrole')
    op.drop_table('rolepermission')
    op.drop_index(op.f('ix_report_status'), table_name='report')
    op.drop_index(op.f('ix_report_report_type'), table_name='report')
    op.drop_index(op.f('ix_report_id'), table_name='report')
    op.drop_table('report')
    op.drop_index(op.f('ix_pricelist_name'), table_name='pricelist')
    op.drop_index(op.f('ix_pricelist_id'), table_name='pricelist')
    op.drop_table('pricelist')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_full_name'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_synclog_type'), table_name='synclog')
    op.drop_index(op.f('ix_synclog_status'), table_name='synclog')
    op.drop_index(op.f('ix_synclog_id'), table_name='synclog')
    op.drop_table('synclog')
    op.drop_index(op.f('ix_role_name'), table_name='role')
    op.drop_index(op.f('ix_role_id'), table_name='role')
    op.drop_table('role')
    op.drop_index(op.f('ix_productmapping_ms2_id'), table_name='productmapping')
    op.drop_index(op.f('ix_productmapping_ms1_id'), table_name='productmapping')
    op.drop_index(op.f('ix_productmapping_id'), table_name='productmapping')
    op.drop_table('productmapping')
    op.drop_index(op.f('ix_permission_name'), table_name='permission')
    op.drop_index(op.f('ix_permission_id'), table_name='permission')
    op.drop_table('permission')
    op.drop_table('ordersyncconfig')
    op.drop_index(op.f('ix_ordermapping_ms2_purchase_id'), table_name='ordermapping')
    op.drop_index(op.f('ix_ordermapping_ms1_order_id'), table_name='ordermapping')
    op.drop_index(op.f('ix_ordermapping_id'), table_name='ordermapping')
    op.drop_table('ordermapping')
    # ### end Alembic commands ###
